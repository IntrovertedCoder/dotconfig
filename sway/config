# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu -nb '#060606' -sf '#060606' -sb '#0B68FF' -nf '#0B68FF'  | xargs swaymsg exec --
set $menu ulauncher-toggle
# Your prefered file manager
set $file ranger

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output "*" bg /home/arik/Pictures/Wallpapers/dark.jpg fill
# output "*" bg /home/arik/Pictures/Wallpapers/blue.jpg fill
output "*" bg /home/arik/Pictures/Wallpapers/wallpaper.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         before-sleep "swaylock -c 060606 --ring-color=0B68FF--text-color=68FF0B--ring-clear-color=efefef --ring-clear-color=7E599D--text-wrong-color=C7000C"
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input "1739:32552:SYN3000:00_06CB:7F28_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}


# Disable unused devices
# Pen?
input "1386:20932:Wacom_HID_51C4_Pen" {
    events enabled
}
# Touchscreen
input "1386:20932:Wacom_HID_51C4_Finger" {
    events disabled
}
# Camera (Not working for some reason restart maybe?)
input "22918:8469:Integrated_Camera:_Integrated_C" {
    events enabled
}


#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    exec ulauncher --no-window-shadow --hide-window

    # Firefox
    bindsym $mod+t exec firefox

    # Screenshots
    bindsym Print exec grim -g "$(slurp)" -t png - | wl-copy -t image/png

    # File manager
    bindsym $mod+F1 exec alacritty -e $file

    # ssh-agent term
    bindsym $mod+F5 exec ssh-agent alacritty

    # Htop term
    bindsym $mod+F2 exec alacritty -t bpytop -e bpytop
    for_window [title="bpytop"] floating enable
    for_window [title="bpytop"] resize set 724 457

    # Music controller (floating)
    bindsym $mod+F3 exec alacritty -t ncmpcpp -e ncmpcpp
    for_window [title="ncmpcpp"] floating enable
    for_window [title="ncmpcpp"] resize set 724 457

    # Rotate Display
    bindsym $mod+F10 mode "rotate"
    mode "rotate" {
        set $touchscreen "1386:20932:Wacom_HID_51C4_Finger"
        bindsym $mod+$left output - transform 270, input $touchscreen events enabled, mode "default"
        bindsym $mod+$right output - transform 90, input $touchscreen events enabled, mode "default"
        bindsym $mod+$up output - transform 0, input $touchscreen events disabled, mode "default"
        bindsym $mod+$down output - transform 180, input $touchscreen events enabled, mode "default"
        bindsym $mod+Return mode "default"
    }

    # Toggle touchscreen
    set $touchscreen "1386:20932:Wacom_HID_51C4_Finger"
    bindsym $mod+F9 input $touchscreen events toggle


    # Brightness control
    bindsym $mod+F12 exec /sbin/backlight_control +10
    bindsym $mod+F11 exec /sbin/backlight_control -10

    # Audio control (Arch wiki)
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    # Keyboard audio control
    bindsym $mod+F4 exec playerctl play-pause

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    # Better resizing of windows
    bindsym $mod+o resize shrink width 10px
    bindsym $mod+u resize grow height 10px
    bindsym $mod+i resize shrink height 10px
    bindsym $mod+y resize grow width 10px
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    # status_command while ~/.config/sway/status.sh; do sleep 1; done
    swaybar_command waybar

    colors {
         background #060606
         statusline #EFEFEF
         separator  #040404

         focused_workspace  #0B68FF #0B68FF #EFEFEF
         active_workspace   #3B3B3B #3B3B3B #EFEFEF
         inactive_workspace #3B3B3B #3B3B3B #949494
         urgent_workspace   #2F343A #C7000C #EFEFEF
         binding_mode       #2F343A #C7000C #EFEFEF
       }
    }
}

# class                 border  bground text    indicator child_border
client.focused          #0B68FF #0B68FF #EFEFEF #0B68FF   #3F88FF
client.focused_inactive #3B3B3B #3B3B3B #EFEFEF #484E50   #3B3B3B
client.unfocused        #3B3B3B #3B3B3B #949494 #3B3B3B   #3B3B3B
client.urgent           #2F343A #C7000C #EFEFEF #C7000C   #C7000C
client.placeholder      #000000 #0C0C0C #EFEFEF #000000   #0C0C0C

client.background       #EFEFEF

include /etc/sway/config.d/*

# Alternating layouts in golden sprial fasion
exec_always --no-startup-id python /home/arik/.config/sway/alternating_layouts.py

# Open programs in each workspace
for_window [class="discord"] move workspace 4
for_window [class="Spotify"] move workspace 10
for_window [app_id="org.pwmt.zathura"] move workspace 5
for_window [class="Gimp"] move workspace 6
for_window [app_id="ulauncher"] border normal 0, border pixel 0

# Autostart?
xwayland enable
exec dunst

# Notification keybinds
bindsym $mod+n exec "dunstctl history-pop"
bindsym $mod+m exec "dunstctl close"
bindsym $mod+Shift+m exec "dunstctl close-all"
